	<style type="text/css">		/* Don't change these options */	#movableNode{		position:absolute;	}		#arrDestInditcator{		position:absolute;		display:none;		width:100px;	}	/* End options that shouldn't be changed */		#arrangableNodes,#movableNode ul{		padding-left:0px;		margin-left:0px;		margin-top:0px;		padding-top:0px;	}		#arrangableNodes li,#movableNode li{		list-style-type:none;		cursor:default;	}	#arrangableNodes li:hover{        background-color: #00c0ef;        color: #ffffff;	}    #arrangableNodes li:hover .tools .fa{        color:#ffffff;        transition: color 2s linear 1s;	}    #arrangableNodes li .tools:hover .fa{        color:#ff0000;    }	.stil{		padding:10px;		color:black;	}	.stil li{		padding:10px;		border:1px;	}	.border{		border: 1px solid black;		padding:10px;		cursor:move;	}	</style>		<script type="text/javascript">	/************************************************************************************************************	(C) www.dhtmlgoodies.com, October 2005		This is a script from www.dhtmlgoodies.com. You will find this and a lot of other scripts at our website.			Terms of use:	You are free to use this script as long as the copyright message is kept intact. However, you may not	redistribute, sell or repost it without our permission.		Thank you!		www.dhtmlgoodies.com	Alf Magne Kalleland		************************************************************************************************************/			var offsetYInsertDiv = -3; // Y offset for the little arrow indicating where the node should be inserted.	if(!document.all)offsetYInsertDiv = offsetYInsertDiv - 7; 	// No IE		var arrParent = false;	var arrMoveCont = false;	var arrMoveCounter = -1;	var arrTarget = false;	var arrNextSibling = false;	var leftPosArrangableNodes = false;	var widthArrangableNodes = false;	var nodePositionsY = new Array();	var nodeHeights = new Array();	var arrInsertDiv = false;	var insertAsFirstNode = false;	var arrNodesDestination = false;	function cancelEvent()	{		return false;	}	function getTopPos(inputObj)	{			  var returnValue = inputObj.offsetTop;	  while((inputObj = inputObj.offsetParent) != null){	  	returnValue += inputObj.offsetTop;	  }	  return returnValue;	}		function getLeftPos(inputObj)	{	  var returnValue = inputObj.offsetLeft;	  while((inputObj = inputObj.offsetParent) != null)returnValue += inputObj.offsetLeft;	  return returnValue;	}			function clearMovableDiv()	{		/*if(arrMoveCont.getElementsByTagName('LI').length>0){			if(arrNextSibling)arrParent.insertBefore(arrTarget,arrNextSibling); else arrParent.appendChild(arrTarget);		}*/	}	function initMoveNode(e)	{		clearMovableDiv();		if(document.all)e = event;		arrMoveCounter = 0;		arrTarget = this;		if(this.nextSibling)arrNextSibling = this.nextSibling; else arrNextSibling = false;		//timerMoveNode();		//arrMoveCont.parentNode.style.left = e.clientX + 'px';		//arrMoveCont.parentNode.style.top = e.clientY + 'px';		return false;	}	function arrangeNodeStopMove()	{		arrMoveCounter = -1;		//arrInsertDiv.style.display='none';		if(arrNodesDestination){			var subs = arrParent.getElementsByTagName('LI');			if(arrNodesDestination==subs[0] && insertAsFirstNode){				arrParent.insertBefore(arrTarget,arrNodesDestination);			}else{				if(arrNodesDestination.nextSibling){					arrParent.insertBefore(arrTarget,arrNodesDestination.nextSibling);				}else{					arrParent.appendChild(arrTarget);				}			}		}		arrNodesDestination = false;		clearMovableDiv();	}		function saveArrangableNodes()	{	    var deger = document.getElementById("deger").value;		var nodes = arrParent.getElementsByTagName('LI');		var string = "";		for(var no=0;no<nodes.length;no++){			if(string.length>0)string = string + ',';			string = string + nodes[no].id;				}				//document.forms[0].hiddenNodeIds.value = string;				// Just for testing		//document.getElementById('arrDebug').innerHTML =  string;					// document.forms[0].submit(); // Remove the comment in front of this line when you have set an action to the form.		$.ajax({			type:'POST',                      	// - POST veya GET			data:'string='+string,				// - Yukarıda data değişkenini tanımladık.			dataType:'html',                    	// - JSON Formatında Gönderilmesini Sağladık.			url:'/<?php echo $conf->admin_path;?>/genel/siralama_kaydet.php?islem='+ deger,  			// - Data Bilgisinin Gönderileceği Dosya Adresi.			success:function(data) {                alert('Sırlama kayıt edildi!');			}		});		function yenile() {			location.reload();		}		setTimeout(3000,yenile);	}		function initArrangableNodes()	{		arrParent = document.getElementById('arrangableNodes');		//arrMoveCont = document.getElementById('movableNode').getElementsByTagName('UL')[0];		arrInsertDiv = document.getElementById('arrDestInditcator');				leftPosArrangableNodes = getLeftPos(arrParent);		//arrInsertDiv.style.left = leftPosArrangableNodes - 5 + 'px';		widthArrangableNodes = arrParent.offsetWidth;				var subs = arrParent.getElementsByTagName('LI');		for(var no=0;no<subs.length;no++){			subs[no].onmousedown = initMoveNode;			subs[no].onselectstart = cancelEvent;			}			document.documentElement.onmouseup = arrangeNodeStopMove;		//document.documentElement.onmousemove = arrangeNodeMove;		document.documentElement.onselectstart = cancelEvent;			}			window.onload = initArrangableNodes;		</script>