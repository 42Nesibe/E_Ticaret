<?php/** * */class helper {	private $pdo;	function __construct() {		global $conf;		try {			$this -> pdo = new pdo("mysql:host={$conf->db_host};dbname={$conf->db_name}", "{$conf->db_user}", "{$conf->db_pass}", array(PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, PDO::MYSQL_ATTR_INIT_COMMAND => "SET NAMES utf8"));		} catch(PDOException $ex) {			die('Veritabani Baglantisi Saglanamadi... <br />Hata: ' . $ex -> getMessage());		}	}	public function delete($table, $where, $id) {		$data = array($id);		$sel = $this -> pdo -> prepare("Delete from $table where {$where}=?");		$sel -> execute($data);	}	/**	 * update record	 * @param  string $table table name	 * @param  array $dat   associative array 'col'=>'val'	 * @param  string $id    primary key column name Tablonun Id adinini belirt.. Toshe..	 * @param  int $val   key value	 */	public function update($table, $dataPOST, $id, $val) {		if ($dataPOST !== null)			$data = array_values($dataPOST);		array_push($data, $val);		//grab keys		$cols = array_keys($dataPOST);		$mark = array();		foreach ($cols as $col) {			$mark[] = $col . "=?";		}		$im = implode(', ', $mark);		$ins = $this -> pdo -> prepare("UPDATE $table SET $im where $id=?");		$ins -> execute($data);	}    public function update_tek($table, $colon,$colon_deger,$where_colon,$id) {        $sql = "UPDATE {$table} SET {$colon}=? WHERE {$where_colon}=?";		$q=$this -> pdo -> prepare($sql);        $q->execute(array($colon_deger,$id));	}    /**    * insert data to table    * @param  string $table table name    * @param  array $dat   associative array 'column_name'=>'val'    */	public function insert($table, $dat) {		if ($dat !== null)			$data = array_values($dat);		//grab keys		$cols = array_keys($dat);		$col = implode(', ', $cols);		//grab values and change it value		$mark = array();		foreach ($data as $key) {			$keys = '?';			$mark[] = $keys;		}		$im = implode(', ', $mark);		$ins = $this -> pdo -> prepare("INSERT INTO $table ($col) values ($im)");		$ins -> execute($data);		return $this->pdo -> lastInsertId();	}    public function slider_index($baslik,$foto){        $ins = $this -> pdo -> prepare("INSERT INTO index_slide (baslik,foto) values ('{$baslik}','{$foto}')");        $ins -> execute();        return $this->pdo -> lastInsertId();    }        	public function siralama($data){		$sel = $this -> pdo -> prepare("UPDATE slider SET siralama=? where slider_iD=?");		$sel -> execute($data);	}    public function isOrtaklari($data){        $sel = $this -> pdo -> prepare("UPDATE is_ortaklari SET siralama=? where is_ortaklari_iD=?");        $sel -> execute($data);    }    public function fetch_all($table)    {        $sel = $this->pdo->prepare("SELECT * FROM $table");        $sel->execute();        return $sel->fetchAll(PDO::FETCH_ASSOC);    }			public function prepare($sql) {		return $this->pdo->prepare($sql);	}	public function queryAll($sql) {		return $this->pdo->query($sql)->fetchAll(PDO::FETCH_ASSOC);	}	public function __destruct() {		$this -> pdo = null;	}	function GetIP(){		if(getenv("HTTP_CLIENT_IP")) {			$ip = getenv("HTTP_CLIENT_IP");		} elseif(getenv("HTTP_X_FORWARDED_FOR")) {			$ip = getenv("HTTP_X_FORWARDED_FOR");			if (strstr($ip, ',')) {				$tmp = explode (',', $ip);				$ip = trim($tmp[0]);			}		} else {			$ip = getenv("REMOTE_ADDR");		}		return $ip;	}}?>